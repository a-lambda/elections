---
title: "Elections législatives 2024 (1er et second tour)"
subtitle: "Vérification pourcentages"
format: html
editor: source
editor_options: 
  chunk_output_type: console
---

### Vérification des colonnes pourcentages

```{r}
#| label: load_packages
#| echo: true 
#| warning: false
library(tidyverse)

```

- Définitions des chemins et noms de fichiers par défaut (fonction du tour)

```{r}

default_path <- function(tour) {
  
  return(paste("data", "legislatives_2024", paste0("tour_", tour), sep = "/"))
  
}

RDS_COM_file_path <- function(tour) {
  
  return(
    paste(default_path(tour), paste0("legislatives_COM_tour_", tour, ".RDS"), sep = "/")
  )
  
}

RDS_BV_file_path <- function(tour) {
  
  return(
    paste(default_path(tour), paste0("legislatives_BV_tour_", tour, ".RDS"), sep = "/")
  )
  
}

```

- récupération du nom des colonnes à considérer
  
```{r}
  
display_colnames_with_percentage <- function(tib) {

  colnames_with_percentage <- tib |> 
    select(starts_with("%")) |>  
    names()
  return(colnames_with_percentage)
  
}

```

::: {.callout-note collapse="false"}

Attention la fonction `round(x, digits = 2` renvoie $53,12$ au lieu de $53,13$ lorsque x vaut $53,125$ par exemple

:::

- calcul des pourcentages globaux

  1. par rapport aux inscrits 
      
    - "%Votants", "%Abstentions", "%Exprimés/inscrits", "%Blancs/inscrits", "%Nuls/inscrits"
    
  2. par rapport aux votants 
    
    - "%Exprimés/votants", "%Blancs/votants", "%Nuls/votants"

::: {.callout-caution collapse="false"}

Attention, dans la mise en place de la fonction `get_percentages` ne pas oublier de prendre en compte la possibilité que le dénominateur puisse être égal à 0 !!!

Ce qui en l'occurrence s'avère être le cas pour le nombre de votants dans certaines communes hors métropole.

:::

```{r}

get_percentages <- function(tib, result_col, col_num, col_denum, after_col) {
  
  result <- tib |> 
    mutate(!!result_col := if_else(
      .data[[col_num]] != 0,
      round(100 * (.data[[col_num]]/.data[[col_denum]]), digits = 2),
      0)) %>%
    relocate(!!result_col, .after = after_col)
  return(result)
  
}

```

- calcul des pourcentages généraux par rapport aux inscrits

```{r}

recalculate_general_per_inscrits <- function(tib) {
  
  col_denum <- "Inscrits"
  col_num <- c("Votants", "Abstentions", "Exprimés", "Blancs", "Nuls")

  after_col <- c(
    "%Votants", "%Abstentions", 
    "%Exprimés/inscrits", "%Blancs/inscrits", "%Nuls/inscrits"
  )
  result_col <- str_to_lower(after_col)

  for (i in 1:length(col_num)) {
    tib <- get_percentages(tib, result_col[i], col_num[i], col_denum, after_col[i])
  }
  return(tib)
  
}

```

- calcul des pourcentages généraux par rapport aux votants

```{r}

recalculate_general_per_votants <- function(tib) {

  col_denum <- "Votants"
  col_num <- c("Exprimés", "Blancs", "Nuls")
  after_col <- c("%Exprimés/votants", "%Blancs/votants", "%Nuls/votants")
  result_col <- str_to_lower(after_col)

  for (i in 1:length(col_num)) {
    tib <- get_percentages(tib, result_col[i], col_num[i], col_denum, after_col[i])
  }
  return(tib)
  
}

```

::: {.callout-note collapse="false"}

Le fait d'utiliser |> au lieu de %>% génère le message suivant :

Avis : Using an external vector in selections was deprecated in tidyselect 1.1.0.
ℹ Please use `all_of()` or `any_of()` instead.
  # Was:
  data %>% select(after_col)

  # Now:
  data %>% select(all_of(after_col))

See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.

:::

- Calcul des pourcentages par candidat
  
  1. par rapport aux inscrits 
    
    - "%voix/inscrits xx"

```{r}

recalculate_candidat_per_inscrits <- function(tib) {

  col_denum <- "Inscrits"
  col_num <- "Voix"
  after_col <- "%Voix/inscrits"
  result_col <- str_to_lower(after_col)
  
  tib <- get_percentages(tib, result_col, col_num, col_denum, after_col)
  return(tib)
  
}

```

  2. par rapport aux exprimés
    
    - "%voix/inscrits xx"

```{r}

recalculate_candidat_per_exprimes <- function(tib) {

  col_denum <- "Exprimés"
  col_num <- "Voix"
  after_col <- "%Voix/exprimés"
  result_col <- str_to_lower(after_col)
  
  tib <- get_percentages(tib, result_col, col_num, col_denum, after_col)
  return(tib)
  
}

```

- vérification des pourcentages présentés par rapport aux pourcentages recalculés
  
```{r}

get_max_percentage_diff_per_column <- function(tib) {
  
  tib_col_percentages <- tib |> 
    select(starts_with("%"))

  indices_cols_to_compare <- seq(1, ncol(tib_col_percentages), by = 2)
  indices_calculated_cols <- seq(2, ncol(tib_col_percentages), by = 2)

  # calcul de la somme des différences entre % initiaux et % recalculés

  diff_cols <-
    map2(indices_cols_to_compare,
        indices_calculated_cols,
        \(x1, x2) {max(tib_col_percentages[x1] - tib_col_percentages[x2], na.rm = TRUE)}
    ) |> 
    unlist()

  return(diff_cols)

}

```

### Récapitulatif des opérations vérifications sur les pourcentages

- pour les résultats relatifs aux communes

```{r}

verif_percentages_COM <- function(tour) {
  
    tib <- readRDS(RDS_COM_file_path(tour))
    colnames_with_percentage <- display_colnames_with_percentage(tib)
    tib <- recalculate_general_per_inscrits(tib)
    tib <- recalculate_general_per_votants(tib)
    tib <- recalculate_candidat_per_inscrits(tib)
    tib <- recalculate_candidat_per_exprimes(tib)
    max_percentage_diff <- get_max_percentage_diff_per_column(tib)
    return(
      tibble(
        colnames = colnames_with_percentage,
        diff_max = max_percentage_diff
      )
    )

}

```

- pour les résultats relatifs aux bureaux de vote

```{r}

verif_percentages_BV <- function(tour) {
  
    tib <- readRDS(RDS_BV_file_path(tour))
    colnames_with_percentage <- display_colnames_with_percentage(tib)
    tib <- recalculate_general_per_inscrits(tib)
    tib <- recalculate_general_per_votants(tib)
    tib <- recalculate_candidat_per_inscrits(tib)
    tib <- recalculate_candidat_per_exprimes(tib)
    max_percentage_diff <- get_max_percentage_diff_per_column(tib)
    return(
      tibble(
        colnames = colnames_with_percentage,
        diff_max = max_percentage_diff
      )
    )

}

```

```{r}

1:2 |>  walk(verif_percentages_COM)
1:2 |>  walk(verif_percentages_BV)

```

