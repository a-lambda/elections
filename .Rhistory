col_denum <- "Inscrits"
after_col <- "% Votants"
df1 <- get_percentages(df, result_col = "% votants", col_num, col_denum, after_col)
get_percentages2 <- function(df, result_col, col_num, col_denum, after_col) {
result <- df |>
mutate({{result_col}} := round(100 * (.data[[col_num]]/.data[[col_denum]]), digits = 2)) %>%
relocate({{result_col}}, .after = after_col)
return(result)
}
result_col <- "% abstentions"
col_num <- "Abstentions"
col_denum <- "Inscrits"
after_col <- "% Abstentions"
df2 <- get_percentages2(df1, result_col = result_col, col_num, col_denum, after_col)
View(df1)
View(df2)
height <- 165
quote(height)
class(quote(height))
class(height)
get_percentages <- function(df, result_col, col_num, col_denum, after_col) {
result <- df |>
mutate({{result_col}} := round(100 * (.data[[col_num]]/.data[[col_denum]]), digits = 2)) %>%
relocate({{result_col}}, .after = after_col)
return(result)
}
result_col <- "% votants"
col_num <- "Votants"
col_denum <- "Inscrits"
after_col <- "% Votants"
df1 <- get_percentages(df, result_col = "% votants", col_num, col_denum, after_col)
get_percentages2 <- function(df, result_col, col_num, col_denum, after_col) {
result <- df |>
mutate({{result_col}} := round(100 * (.data[[col_num]]/.data[[col_denum]]), digits = 2)) %>%
relocate({{result_col}}, .after = after_col)
return(result)
}
result_col <- "% abstentions"
col_num <- "Abstentions"
col_denum <- "Inscrits"
after_col <- "% Abstentions"
df2 <- get_percentages2(df1, result_col, col_num, col_denum, after_col)
View(df2)
get_percentages2 <- function(df, result_col, col_num, col_denum, after_col) {
col_name <- eval(quote(result_col))
result <- df |>
mutate(col_name := round(100 * (.data[[col_num]]/.data[[col_denum]]), digits = 2)) %>%
relocate(col_name, .after = after_col)
return(result)
}
result_col <- "% abstentions"
col_num <- "Abstentions"
col_denum <- "Inscrits"
after_col <- "% Abstentions"
df2 <- get_percentages2(df1, result_col, col_num, col_denum, after_col)
View(df2)
get_percentages2 <- function(df, result_col, col_num, col_denum, after_col) {
col_name <- eval(quote(result_col))
print(col_name)
result <- df |>
mutate(col_name := round(100 * (.data[[col_num]]/.data[[col_denum]]), digits = 2)) %>%
relocate(col_name, .after = after_col)
return(result)
}
result_col <- "% abstentions"
col_num <- "Abstentions"
col_denum <- "Inscrits"
after_col <- "% Abstentions"
df2 <- get_percentages2(df1, result_col, col_num, col_denum, after_col)
get_percentages2 <- function(df, result_col, col_num, col_denum, after_col) {
col_name <- eval(quote(result_col))
print(col_name)
print(result_col)
result <- df |>
mutate(col_name := round(100 * (.data[[col_num]]/.data[[col_denum]]), digits = 2)) %>%
relocate(col_name, .after = after_col)
return(result)
}
result_col <- "% abstentions"
col_num <- "Abstentions"
col_denum <- "Inscrits"
after_col <- "% Abstentions"
df2 <- get_percentages2(df1, result_col, col_num, col_denum, after_col)
get_percentages <- function(df, result_col, col_num, col_denum, after_col) {
result <- df |>
mutate({{result_col}} := round(100 * (.data[[col_num]]/.data[[col_denum]]), digits = 2)) %>%
relocate({{result_col}}, .after = after_col)
return(result)
}
result_col <- "% votants"
col_num <- "Votants"
col_denum <- "Inscrits"
after_col <- "% Votants"
df1 <- get_percentages(df, result_col = "% votants", col_num, col_denum, after_col)
get_percentages2 <- function(df, result_col, col_num, col_denum, after_col) {
result <- df |>
mutate(col_name := round(100 * (.data[[col_num]]/.data[[col_denum]]), digits = 2)) %>%
relocate(col_name, .after = after_col)
return(result)
}
result_col <- "% abstentions"
col_num <- "Abstentions"
col_denum <- "Inscrits"
after_col <- "% Abstentions"
df2 <- get_percentages2(df1, result_col, col_num, col_denum, after_col)
View(df2)
get_percentages <- function(df, result_col, col_num, col_denum, after_col) {
result <- df |>
mutate({{result_col}} := round(100 * (.data[[col_num]]/.data[[col_denum]]), digits = 2)) %>%
relocate({{result_col}}, .after = after_col)
return(result)
}
result_col <- "% votants"
col_num <- "Votants"
col_denum <- "Inscrits"
after_col <- "% Votants"
df1 <- get_percentages(df, result_col = "% votants", col_num, col_denum, after_col)
get_percentages2 <- function(df, result_col, col_num, col_denum, after_col) {
result <- df |>
mutate(.data[[result_col]]:= round(100 * (.data[[col_num]]/.data[[col_denum]]), digits = 2)) %>%
relocate(col_name, .after = after_col)
return(result)
}
result_col <- "% abstentions"
col_num <- "Abstentions"
col_denum <- "Inscrits"
after_col <- "% Abstentions"
df2 <- get_percentages2(df1, result_col, col_num, col_denum, after_col)
get_percentages <- function(df, result_col, col_num, col_denum, after_col) {
result <- df |>
mutate({{result_col}} := round(100 * (.data[[col_num]]/.data[[col_denum]]), digits = 2)) %>%
relocate({{result_col}}, .after = after_col)
return(result)
}
result_col <- "% votants"
col_num <- "Votants"
col_denum <- "Inscrits"
after_col <- "% Votants"
df1 <- get_percentages(df, result_col = "% votants", col_num, col_denum, after_col)
get_percentages2 <- function(df, result_col, col_num, col_denum, after_col) {
result <- df |>
mutate(.data[[result_col]] = round(100 * (.data[[col_num]]/.data[[col_denum]]), digits = 2)) %>%
get_percentages <- function(df, result_col, col_num, col_denum, after_col) {
result <- df |>
mutate({{result_col}} := round(100 * (.data[[col_num]]/.data[[col_denum]]), digits = 2)) %>%
relocate({{result_col}}, .after = after_col)
return(result)
}
result_col <- "% votants"
col_num <- "Votants"
col_denum <- "Inscrits"
after_col <- "% Votants"
df1 <- get_percentages(df, result_col, col_num, col_denum, after_col)
get_percentages2 <- function(df, result_col, col_num, col_denum, after_col) {
result <- df |>
mutate(.data[[result_col]] = round(100 * (.data[[col_num]]/.data[[col_denum]]), digits = 2)) %>%
get_percentages <- function(df, result_col, col_num, col_denum, after_col) {
result <- df |>
mutate({{result_col}} := round(100 * (.data[[col_num]]/.data[[col_denum]]), digits = 2)) %>%
relocate({{result_col}}, .after = after_col)
return(result)
}
result_col <- "% votants"
col_num <- "Votants"
col_denum <- "Inscrits"
after_col <- "% Votants"
df1 <- get_percentages(df, result_col, col_num, col_denum, after_col)
get_percentages2 <- function(df, result_col, col_num, col_denum, after_col) {
result <- df |>
mutate(.data[[result_col]] = round(100 * (.data[[col_num]]/.data[[col_denum]]), digits = 2)) %>%
get_percentages <- function(df, result_col, col_num, col_denum, after_col) {
result <- df |>
mutate({{result_col}} := round(100 * (.data[[col_num]]/.data[[col_denum]]), digits = 2)) %>%
relocate({{result_col}}, .after = after_col)
return(result)
}
result_col <- "% votants"
col_num <- "Votants"
col_denum <- "Inscrits"
after_col <- "% Votants"
df1 <- get_percentages(df, result_col, col_num, col_denum, after_col)
get_percentages2 <- function(df, result_col, col_num, col_denum, after_col) {
result <- df |>
mutate(.data[[result_col]] := round(100 * (.data[[col_num]]/.data[[col_denum]]), digits = 2)) %>%
relocate(.data[[result_col]], .after = after_col)
return(result)
}
result_col <- "% abstentions"
col_num <- "Abstentions"
col_denum <- "Inscrits"
after_col <- "% Abstentions"
df2 <- get_percentages2(df1, result_col, col_num, col_denum, after_col)
get_percentages <- function(df, result_col, col_num, col_denum, after_col) {
result <- df |>
mutate({{result_col}} := round(100 * (.data[[col_num]]/.data[[col_denum]]), digits = 2)) %>%
relocate({{result_col}}, .after = after_col)
return(result)
}
result_col <- "% votants"
col_num <- "Votants"
col_denum <- "Inscrits"
after_col <- "% Votants"
df1 <- get_percentages(df, result_col, col_num, col_denum, after_col)
get_percentages2 <- function(df, result_col, col_num, col_denum, after_col) {
result <- df |>
mutate(!!result_col := round(100 * (.data[[col_num]]/.data[[col_denum]]), digits = 2)) %>%
relocate(.data[[result_col]], .after = after_col)
return(result)
}
result_col <- "% abstentions"
col_num <- "Abstentions"
col_denum <- "Inscrits"
after_col <- "% Abstentions"
df2 <- get_percentages2(df1, result_col, col_num, col_denum, after_col)
get_percentages <- function(df, result_col, col_num, col_denum, after_col) {
result <- df |>
mutate({{result_col}} := round(100 * (.data[[col_num]]/.data[[col_denum]]), digits = 2)) %>%
relocate({{result_col}}, .after = after_col)
return(result)
}
result_col <- "% votants"
col_num <- "Votants"
col_denum <- "Inscrits"
after_col <- "% Votants"
df1 <- get_percentages(df, result_col, col_num, col_denum, after_col)
get_percentages2 <- function(df, result_col, col_num, col_denum, after_col) {
result <- df |>
mutate(!!result_col := round(100 * (.data[[col_num]]/.data[[col_denum]]), digits = 2)) %>%
relocate(!!result_col, .after = after_col)
return(result)
}
result_col <- "% abstentions"
col_num <- "Abstentions"
col_denum <- "Inscrits"
after_col <- "% Abstentions"
df2 <- get_percentages2(df1, result_col, col_num, col_denum, after_col)
View(df2)
get_percentages <- function(df, result_col, col_num, col_denum, after_col) {
result <- df |>
mutate(!!result_col := round(100 * (.data[[col_num]]/.data[[col_denum]]), digits = 2)) %>%
relocate(!!result_col, .after = after_col)
return(result)
}
result_col <- "% votants"
col_num <- "Votants"
col_denum <- "Inscrits"
after_col <- "% Votants"
df1 <- get_percentages(df, result_col, col_num, col_denum, after_col)
get_percentages2 <- function(df, result_col, col_num, col_denum, after_col) {
result <- df |>
mutate(!!result_col := round(100 * (.data[[col_num]]/.data[[col_denum]]), digits = 2)) %>%
relocate(!!result_col, .after = after_col)
return(result)
}
result_col <- "% abstentions"
col_num <- "Abstentions"
col_denum <- "Inscrits"
after_col <- "% Abstentions"
df2 <- get_percentages2(df1, result_col, col_num, col_denum, after_col)
View(df1)
get_percentages <- function(df, result_col, col_num, col_denum, after_col) {
result <- df |>
mutate(!!result_col := round(100 * (.data[[col_num]]/.data[[col_denum]]), digits = 2)) |>
relocate(!!result_col, .after = after_col)
return(result)
}
result_col <- "% votants"
col_num <- "Votants"
col_denum <- "Inscrits"
after_col <- "% Votants"
df1 <- get_percentages(df, result_col, col_num, col_denum, after_col)
get_percentages2 <- function(df, result_col, col_num, col_denum, after_col) {
result <- df |>
mutate(!!result_col := round(100 * (.data[[col_num]]/.data[[col_denum]]), digits = 2)) %>%
relocate(!!result_col, .after = after_col)
return(result)
}
result_col <- "% abstentions"
col_num <- "Abstentions"
col_denum <- "Inscrits"
after_col <- "% Abstentions"
df2 <- get_percentages2(df1, result_col, col_num, col_denum, after_col)
View(df1)
names_pourcentages
names(df)
paste("Voix", 1:38)
col_voix <- paste("Voix, 1:38")
col_Voix_sur_inscrits <- paste("% Voix/inscrits", 1:38)
col_Voix_sur_exprimes <- paste("% Voix/exprimés", 1:38)
col_voix_sur_inscrits <- paste("% voix/inscrits", 1:38)
col_voix_sur_exprimes <- paste("% voix/exprimés", 1:38)
col_voix
col_voix <- paste("Voix", 1:38)
col_Voix_sur_inscrits <- paste("% Voix/inscrits", 1:38)
col_Voix_sur_exprimes <- paste("% Voix/exprimés", 1:38)
col_voix_sur_inscrits <- paste("% voix/inscrits", 1:38)
col_voix_sur_exprimes <- paste("% voix/exprimés", 1:38)
col_voix
col_Voix_sur_inscrits
col_Voix_sur_exprimes
col_voix_sur_inscrits
col_voix_sur_exprimes
# nom de colonnes existantes servant pour le calcul
col_voix <- paste("Voix", 1:38)
col_Voix_sur_inscrits <- paste("% Voix/inscrits", 1:38)
col_Voix_sur_exprimes <- paste("% Voix/exprimés", 1:38)
# nom de colonnes calculées
col_voix_sur_inscrits <- paste("% voix/inscrits", 1:38)
col_voix_sur_exprimes <- paste("% voix/exprimés", 1:38)
tib <- tibble(
col_voix = col_voix,
col_Voix_sur_inscrits = col_Voix_sur_inscrits,
col_Voix_sur_exprimes = col_Voix_sur_exprimes,
col_voix_sur_inscrits = col_voix_sur_inscrits,
col_voix_sur_exprimes = col_voix_sur_exprimes
)
tib
df$tib[1,1]
tib <- tibble(
col_voix = col_voix,
col_Voix_sur_inscrits = col_Voix_sur_inscrits,
col_Voix_sur_exprimes = col_Voix_sur_exprimes,
col_voix_sur_inscrits = col_voix_sur_inscrits,
col_voix_sur_exprimes = col_voix_sur_exprimes
)
tib[1,1]
df$as.character(tib[1,1])
df[as.character(tib[1,1])]
as.character(tib[1,1])
df["Voix 1"]
df[as.character(tib[1,1])]
s <- as.character(tib[1,1])
df[s]
s <- as.character(tib[1,1])
df[!!s]
s <- as.character(tib[1,1])
df[eval(s)]
View(df)
df <- resultats
inscrits <- "Inscrits"
exprimes <- "Exprimés"
for (i in 1:38) {
# nom de colonnes existantes servant pour le calcul
col_voix <- paste("Voix", i)
col_Voix_sur_inscrits <- paste("% Voix/inscrits", 1:38)
col_Voix_sur_exprimes <- paste("% Voix/exprimés", 1:38)
# nom de colonnes calculées
col_voix_sur_inscrits <- paste("% voix/inscrits", 1:38)
col_voix_sur_exprimes <- paste("% voix/exprimés", 1:38)
# insertion des pourcentages voix/inscrits pour chaque parti
df <- get_percentages(df, col_voix_sur_inscrits, col_voix, inscrits, col_Voix_sur_inscrits)
# insertion des pourcentages voix/exprimés pour chaque parti
df <- get_percentages(df, col_voix_sur_inscrits, col_voix, exprimes, col_Voix_sur_exprimes)
}
df <- resultats
inscrits <- "Inscrits"
exprimes <- "Exprimés"
for (i in 1:38) {
# nom de colonnes existantes servant pour le calcul
col_voix <- paste("Voix", i)
col_Voix_sur_inscrits <- paste("% Voix/inscrits", i)
col_Voix_sur_exprimes <- paste("% Voix/exprimés", i)
# nom de colonnes calculées
col_voix_sur_inscrits <- paste("% voix/inscrits", i)
col_voix_sur_exprimes <- paste("% voix/exprimés", i)
# insertion des pourcentages voix/inscrits pour chaque parti
df <- get_percentages(df, col_voix_sur_inscrits, col_voix, inscrits, col_Voix_sur_inscrits)
# insertion des pourcentages voix/exprimés pour chaque parti
df <- get_percentages(df, col_voix_sur_inscrits, col_voix, exprimes, col_Voix_sur_exprimes)
}
View(df)
df <- resultats
inscrits <- "Inscrits"
exprimes <- "Exprimés"
for (i in 1:38) {
# nom de colonnes existantes servant pour le calcul
col_voix <- paste("Voix", i)
col_Voix_sur_inscrits <- paste("% Voix/inscrits", i)
col_Voix_sur_exprimes <- paste("% Voix/exprimés", i)
# nom de colonnes calculées
col_voix_sur_inscrits <- paste("% voix/inscrits", i)
col_voix_sur_exprimes <- paste("% voix/exprimés", i)
# insertion des pourcentages voix/inscrits pour chaque parti
df <- get_percentages(df, col_voix_sur_inscrits, col_voix, inscrits, col_Voix_sur_inscrits)
# insertion des pourcentages voix/exprimés pour chaque parti
df <- get_percentages(df, col_Voix_sur_exprimes, col_voix, exprimes, col_Voix_sur_exprimes)
}
View(df)
df <- resultats
inscrits <- "Inscrits"
exprimes <- "Exprimés"
for (i in 1:38) {
# nom de colonnes existantes servant pour le calcul
col_voix <- paste("Voix", i)
col_Voix_sur_inscrits <- paste("% Voix/inscrits", i)
col_Voix_sur_exprimes <- paste("% Voix/exprimés", i)
# nom de colonnes calculées
col_voix_sur_inscrits <- paste("% voix/inscrits", i)
col_voix_sur_exprimes <- paste("% voix/exprimés", i)
# insertion des pourcentages voix/inscrits pour chaque parti
df <- get_percentages(df, col_voix_sur_inscrits, col_voix, inscrits, col_Voix_sur_inscrits)
# insertion des pourcentages voix/exprimés pour chaque parti
df <- get_percentages(df, col_voix_sur_exprimes, col_voix, exprimes, col_Voix_sur_exprimes)
}
View(df)
class(df)
tib <- resultats |>
mutate(
across(.cols = starts_with("%"),
~ gsub(pattern = ",", replacement = ".", x = .x))
) |>
mutate(
across(.cols = starts_with("%"),
~ gsub(pattern = "%", replacement = "", x = .x))
) |>
mutate(
across(.cols = starts_with("%"),
~ as.numeric(.x))
)
View(tib)
names_pourcentages <- tib |>
select(starts_with("%")) |>
names()
get_percentages <- function(tib, result_col, col_num, col_denum, after_col) {
result <- tib |>
mutate(!!result_col := round(100 * (.data[[col_num]]/.data[[col_denum]]), digits = 2)) |>
relocate(!!result_col, .after = after_col)
return(result)
}
result_col <- "% votants"
col_num <- "Votants"
col_denum <- "Inscrits"
after_col <- "% Votants"
tib <- get_percentages(tib, result_col, col_num, col_denum, after_col)
result_col <- "% abstentions"
col_num <- "Abstentions"
col_denum <- "Inscrits"
after_col <- "% Abstentions"
tib <- get_percentages(tib, result_col, col_num, col_denum, after_col)
inscrits <- "Inscrits"
exprimes <- "Exprimés"
for (i in 1:38) {
# nom de colonnes existantes servant pour le calcul
col_voix <- paste("Voix", i)
col_Voix_sur_inscrits <- paste("% Voix/inscrits", i)
col_Voix_sur_exprimes <- paste("% Voix/exprimés", i)
# nom de colonnes calculées
col_voix_sur_inscrits <- paste("% voix/inscrits", i)
col_voix_sur_exprimes <- paste("% voix/exprimés", i)
# insertion des pourcentages voix/inscrits pour chaque parti
tib <- get_percentages(tib, col_voix_sur_inscrits, col_voix, inscrits, col_Voix_sur_inscrits)
# insertion des pourcentages voix/exprimés pour chaque parti
tib <- get_percentages(tib, col_voix_sur_exprimes, col_voix, exprimes, col_Voix_sur_exprimes)
}
View(tib)
names_pourcentages
capitalize("afdf")
str_to_title("fsdfsdfsdfsd")
after_col <- c("% Votants", "% Abstentions", "% Exprimés/inscrits", "% Blancs/inscrits", "% Nuls/inscrits")
result_col <- str_to_lower(after_col)
result_col
tib <- resultats |>
mutate(
across(.cols = starts_with("%"),
~ gsub(pattern = ",", replacement = ".", x = .x))
) |>
mutate(
across(.cols = starts_with("%"),
~ gsub(pattern = "%", replacement = "", x = .x))
) |>
mutate(
across(.cols = starts_with("%"),
~ as.numeric(.x))
)
get_percentages <- function(tib, result_col, col_num, col_denum, after_col) {
result <- tib |>
mutate(!!result_col := round(100 * (.data[[col_num]]/.data[[col_denum]]), digits = 2)) |>
relocate(!!result_col, .after = after_col)
return(result)
}
# calcul des pourcentages par rapport aux inscrits
col_denum <- "Inscrits"
col_num <- c("Votants", "Abstentions", "Exprimés", "Blancs", "Nuls")
after_col <- c("% Votants", "% Abstentions", "% Exprimés/inscrits", "% Blancs/inscrits", "% Nuls/inscrits")
result_col <- str_to_lower(after_col)
for (i in 1:5) {
tib <- get_percentages(tib, result_col[i], col_num[i], col_denum, after_col[i])
}
# calcul des pourcentages par rapport aux votants
col_denum <- "Votants"
col_num <- c("Exprimés", "Blancs", "Nuls")
after_col <- c("% Exprimés/votants", "% Blancs/votants", "% Nuls/votants")
result_col <- str_to_lower(after_col)
for (i in 1:3) {
tib <- get_percentages(tib, result_col[i], col_num[i], col_denum, after_col[i])
}
View(tib)
inscrits <- "Inscrits"
exprimes <- "Exprimés"
for (i in 1:38) {
# nom de colonnes existantes servant pour le calcul
col_voix <- paste("Voix", i)
col_Voix_sur_inscrits <- paste("% Voix/inscrits", i)
col_Voix_sur_exprimes <- paste("% Voix/exprimés", i)
# nom de colonnes calculées
col_voix_sur_inscrits <- paste("% voix/inscrits", i)
col_voix_sur_exprimes <- paste("% voix/exprimés", i)
# insertion des pourcentages voix/inscrits pour chaque parti
tib <- get_percentages(tib, col_voix_sur_inscrits, col_voix, inscrits, col_Voix_sur_inscrits)
# insertion des pourcentages voix/exprimés pour chaque parti
tib <- get_percentages(tib, col_voix_sur_exprimes, col_voix, exprimes, col_Voix_sur_exprimes)
}
